// Manual testing

ALM stands for Application Lifecycle Management. ALM Quality Center (QC) is the set of tools used along with manual testing to keep record of your test process, execution, results, etc.

//TestNG Framework



TestNG - Test Next Generation

. It is an testing frame work.
. Used for Unit, functional and integration testing
. No main method will be there
. Only @Test
. It will run the testcases in the ascending order of the methodname (ie, it will see the starting letter of the 
method name and displays it in the ascending order)
. Before running the test case, we have to install the testNG link by going to the testNG website by clicking the help button-> install new software
. package name(testng.annotations.Test)




//Setting priority to the test case
. setting the priority to the test cases by (priority =0 numberic values)



// Skipping the testCases
@Test(priority =0,enabled= false) , by default all the other test cases will be true




// Dependencies Management
dependsOnMethods, through this method we can handle the dependencies methods
Totally 6  methods for dependencies:
dependsOnGroups()
dependsOnMethods()
description()
ignoreMissingdependencies()
expectedExceptions()
expectedExceptionsMessageRegExp()




// writing a suite,  @BeforeSuite, @AfterSuite
//writing a testsuite in an XML file
.suite->test->classes->class

.for running the testsuite in XML --->> run->TestNGsuite ... for all others run->TestNGTest. 
. have to suite name and test name in the attributes





// how to group your test cases in the TestNG
//xml -------- suite-test-groups-run-include-exclude- classses-class



// Normal testCase xml syntax
<suite name = "TestCases">
<test name = "Sample workouts">
<classes>
<class name ="testNG_sample_programs.Dependencies"></class>
<class name ="testNG_sample_programs.Method_ascending"></class>
<class name="testNG_sample_programs.SettingPriority"></class>
<class name="testNG_sample_programs.SimpleTestCase"></class>
</classes>
</test>
</suite> 

//Grouping Syntax 
<suite name = "Mobile Grouping">
<test name ="Grouping test cases">
<groups>
<run>
<include name = "Apple"></include>
</run>
</groups>
<classes>
<class name="testNG_sample_programs.GroupingTestCase"></class>
</classes>
</test>
</suite>

//
<suite>
<test>
<groups>
<run>
<include>
</run>
</groups>
<classes>
<class>
</classes>
</test>
</suite>



//Parameterization in TestNG
.How to pass the value from xml file to the .java file

//Parallel Testing
In Selenium , we can approach through Grid
In xml file , we have the attribute <parallel ="method"  thread-count ="2">

//Assertion in TestNG
Mainly Used for Unit Testing
Assert.assertTrue(actual,expected)

//Annotations orders
@BeforeMethod
@BeforeClass
@BeforeTest
@BeforeSuite
@AfterMethod
@AfterClass
@AfterTest
@AfterSuite
@DataProvider

//TestNG Listeners: - have to implements the interface ITestListener

Major Listeners:
SuiteListeners
TestListeners
MethodListeners


some of the methods for ITestListeners are :
onTestStart(ITestResult result)
onTestSuccess(ITestResult result)
onTestFailure(ITestResult result) 
onTestSkipped(ITestResult result) 
onTestFailedButWithinSuccessPercentage(ITestResult result) 
onStart(ITestContext context)
onFinish(ITestContext context) 

Thankyou.














